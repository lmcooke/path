
/* -*- c++ -*- */
{ 
    entities = { 
        box = VisibleEntity { 
            frame = Vector3(0, 0, 0 ); 
            model = "boxModel"; 
        }; 
        
        camera = Camera { 
            depthOfFieldSettings = DepthOfFieldSettings {    
                enabled = false; 
                farBlurRadiusFraction = 0.005; 
                farBlurryPlaneZ = -100; 
                farSharpPlaneZ = -40; 
                focusPlaneZ = -10; 
                lensRadius = 0.01; 
                model = "NONE"; 
                nearBlurRadiusFraction = 0.015; 
                nearBlurryPlaneZ = -0.25; 
                nearSharpPlaneZ = -1; 
            }; 
            
            filmSettings = FilmSettings { 
                antialiasingEnabled = true; 
                antialiasingFilterRadius = 0; 
                antialiasingHighQuality = true; 
                bloomRadiusFraction = 0.009; 
                bloomStrength = 0.2; 
                debugZoom = 1; 
                effectsEnabled = true; 
                gamma = 2.2; 
                sensitivity = 1; 
                toneCurve = Spline { 
                    control = ( 0, 0.0787234, 0.306383, 0.75532, 0.829787 ); 
                    extrapolationMode = "LINEAR"; 
                    finalInterval = -1; 
                    interpolationMode = "CUBIC"; 
                    time = ( 0, 0.169565, 0.339131, 0.752174, 1 ); 
                }; 
                
                vignetteBottomStrength = 0.05; 
                vignetteSizeFraction = 0.17; 
                vignetteTopStrength = 0.5; 
            }; 
            
            frame = CFrame::fromXYZYPRDegrees(0, 1, 6, 0, -2 ); 
            motionBlurSettings = MotionBlurSettings { 
                cameraMotionInfluence = 0.5; 
                enabled = false; 
                exposureFraction = 0.75; 
                maxBlurDiameterFraction = 0.1; 
                numSamples = 27; 
            }; 
            
            projection = Projection { 
                farPlaneZ = -200; 
                fovDegrees = 20; 
                fovDirection = "VERTICAL"; 
                nearPlaneZ = -0.1; 
                pixelOffset = Vector2(0, 0 ); 
            }; 
            
            visualizationScale = 1; 
        }; 
        
        light1 = Light { 
            attenuation = ( 0.0001, 0, 1 ); 
            bulbPower = Power3(60 ); 
            castsShadows = true; 
            extent = Vector2(0.75, 0.75 ); 
            frame = CFrame::fromXYZYPRDegrees(0, 1.5, 0, 0, -90, 0 ); 
            shadowMapSize = Vector2int16(1024, 1024 ); 
            spotHalfAngleDegrees = 45; 
            spotSquare = true; 
            type = "SPOT"; 
            varianceShadowSettings = VSMSettings { 
                baseSize = Vector2int16(4096, 4096 ); 
                blurMultiplier = 5; 
                downsampleFactor = 4; 
                enabled = true; 
                filterRadius = 20; 
            }; 
            
        }; 
        
        light2 = Light { 
            attenuation = ( 0.0001, 0, 1 ); 
            bulbPower = Power3(60 ); 
            castsShadows = true; 
            extent = Vector2(0.75, 0.75 ); 
            frame = CFrame::fromXYZYPRDegrees(0, 1.5, 0, 0, 0, 0 ); 
            shadowMapSize = Vector2int16(1024, 1024 ); 
            spotHalfAngleDegrees = 45; 
            spotSquare = true; 
            type = "SPOT"; 
            varianceShadowSettings = VSMSettings { 
                baseSize = Vector2int16(4096, 4096 ); 
                blurMultiplier = 5; 
                downsampleFactor = 4; 
                enabled = true; 
                filterRadius = 20; 
            }; 
            
        }; 
        
        light3 = Light { 
            attenuation = ( 0.0001, 0, 1 ); 
            bulbPower = Power3(60 ); 
            castsShadows = true; 
            extent = Vector2(0.75, 0.75 ); 
            frame = CFrame::fromXYZYPRDegrees(0, 1.5, 0, 90, 0, 0 ); 
            shadowMapSize = Vector2int16(1024, 1024 ); 
            spotHalfAngleDegrees = 45; 
            spotSquare = true; 
            type = "SPOT"; 
            varianceShadowSettings = VSMSettings { 
                baseSize = Vector2int16(4096, 4096 ); 
                blurMultiplier = 5; 
                downsampleFactor = 4; 
                enabled = true; 
                filterRadius = 20; 
            }; 
            
        }; 
        
        light4 = Light { 
            attenuation = ( 0.0001, 0, 1 ); 
            bulbPower = Power3(60 ); 
            castsShadows = true; 
            extent = Vector2(0.75, 0.75 ); 
            frame = CFrame::fromXYZYPRDegrees(0, 1.5, 0, -90, 0, 0 ); 
            shadowMapSize = Vector2int16(1024, 1024 ); 
            spotHalfAngleDegrees = 45; 
            spotSquare = true; 
            type = "SPOT"; 
            varianceShadowSettings = VSMSettings { 
                baseSize = Vector2int16(4096, 4096 ); 
                blurMultiplier = 5; 
                downsampleFactor = 4; 
                enabled = true; 
                filterRadius = 20; 
            }; 
            
        }; 
        
        light5 = Light { 
            attenuation = ( 0.0001, 0, 1 ); 
            bulbPower = Power3(60 ); 
            castsShadows = true; 
            extent = Vector2(0.75, 0.75 ); 
            frame = CFrame::fromXYZYPRDegrees(0, 1.5, 0, 180, 0, 180 ); 
            shadowMapSize = Vector2int16(1024, 1024 ); 
            spotHalfAngleDegrees = 45; 
            spotSquare = true; 
            type = "SPOT"; 
            varianceShadowSettings = VSMSettings { 
                baseSize = Vector2int16(4096, 4096 ); 
                blurMultiplier = 5; 
                downsampleFactor = 4; 
                enabled = true; 
                filterRadius = 20; 
            }; 
            
        }; 
        
    }; 
    
    lightingEnvironment = LightingEnvironment { 
        ambientOcclusionSettings = AmbientOcclusionSettings { 
            bias = 0.023; 
            blurRadius = 4; 
            blurStepSize = 2; 
            depthPeelSeparationHint = 0.0725; 
            edgeSharpness = 1; 
            enabled = true; 
            highQualityBlur = true; 
            intensity = 2.45833; 
            monotonicallyDecreasingBilateralWeights = false; 
            numSamples = 19; 
            packBlurKeys = false; 
            radius = 0.75; 
            temporalFilterSettings = TemporalFilter::Settings { 
                falloffEndDistance = 0.07; 
                falloffStartDistance = 0.05; 
                hysteresis = 0.822917; 
            }; 
            
            temporallyVarySamples = true; 
            useDepthPeelBuffer = true; 
            useNormalBuffer = true; 
            useNormalsInBlur = true; 
            zStorage = "HALF"; 
        }; 
        
        environmentMap = 0.05; 
    }; 
    
    models = { 
        boxModel = ArticulatedModel::Specification { 
            filename = "model/CornellBox-Sphere.obj"; 
        }; 
        
    }; 
    
    name = "G3D Cornell Box (Spheres)"; 
} 